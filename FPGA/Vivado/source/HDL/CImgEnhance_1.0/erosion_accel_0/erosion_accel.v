// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="erosion_accel,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu3eg-sbva484-1-e,HLS_INPUT_CLOCK=3.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.056000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=633,HLS_SYN_LUT=1272,HLS_VERSION=2019_1}" *)

module erosion_accel (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        init,
        in0,
        in1,
        in2,
        in3,
        in4,
        in5,
        in6,
        in7,
        in8,
        in9,
        in10,
        in11,
        in12,
        in13,
        in14,
        in15,
        in16,
        in17,
        in18,
        out_r,
        out_r_ap_vld
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [0:0] init;
input  [7:0] in0;
input  [7:0] in1;
input  [7:0] in2;
input  [7:0] in3;
input  [7:0] in4;
input  [7:0] in5;
input  [7:0] in6;
input  [7:0] in7;
input  [7:0] in8;
input  [7:0] in9;
input  [7:0] in10;
input  [7:0] in11;
input  [7:0] in12;
input  [7:0] in13;
input  [7:0] in14;
input  [7:0] in15;
input  [7:0] in16;
input  [7:0] in17;
input  [7:0] in18;
output  [7:0] out_r;
output   out_r_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] out_r;
reg out_r_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] regRow4_0;
reg   [7:0] regRow4_1;
reg   [7:0] regRow3_0;
reg   [7:0] regRow3_1;
reg   [7:0] regRow3_2;
reg   [7:0] regRow3_3;
reg   [7:0] regRow2_0;
reg   [7:0] regRow2_1;
reg   [7:0] regRow2_2;
reg   [7:0] regRow2_3;
reg   [7:0] regRow2_4;
reg   [7:0] regRow2_5;
reg   [7:0] regRow2_6;
reg   [7:0] regRow2_7;
reg   [7:0] regRow1_0;
reg   [7:0] regRow1_1;
reg   [7:0] regRow1_2;
reg   [7:0] regRow1_3;
reg   [7:0] regRow1_4;
reg   [7:0] regRow1_5;
reg   [7:0] regRow1_6;
reg   [7:0] regRow1_7;
reg   [7:0] regRow1_8;
reg   [7:0] regRow1_9;
reg   [7:0] regRow1_10;
reg   [7:0] regRow1_11;
reg   [7:0] regRow1_12;
reg   [7:0] regRow1_13;
reg   [7:0] regRow1_14;
reg   [7:0] regRow1_15;
reg   [7:0] regRow0_0;
reg   [7:0] regRow0_1;
reg   [7:0] regRow0_2;
reg   [7:0] regRow0_3;
reg   [7:0] regRow0_4;
reg   [7:0] regRow0_5;
reg   [7:0] regRow0_6;
reg   [7:0] regRow0_7;
reg   [7:0] regRow0_8;
reg   [7:0] regRow0_9;
reg   [7:0] regRow0_10;
reg   [7:0] regRow0_11;
reg   [7:0] regRow0_12;
reg   [7:0] regRow0_13;
reg   [7:0] regRow0_14;
reg   [7:0] regRow0_15;
reg   [7:0] regRow0_16;
reg   [7:0] regRow0_17;
reg   [7:0] regRow0_18;
reg   [7:0] regCol3_0;
reg   [7:0] regCol3_1;
reg   [7:0] regCol2_0;
reg   [7:0] regCol2_1;
reg   [7:0] regCol2_2;
reg   [7:0] regCol2_3;
reg   [7:0] regCol1_0;
reg   [7:0] regCol1_1;
reg   [7:0] regCol1_2;
reg   [7:0] regCol1_3;
reg   [7:0] regCol1_4;
reg   [7:0] regCol1_5;
reg   [7:0] regCol1_6;
reg   [7:0] regCol1_7;
reg   [7:0] regCol0_0;
reg   [7:0] regCol0_1;
reg   [7:0] regCol0_2;
reg   [7:0] regCol0_3;
reg   [7:0] regCol0_4;
reg   [7:0] regCol0_5;
reg   [7:0] regCol0_6;
reg   [7:0] regCol0_7;
reg   [7:0] regCol0_8;
reg   [7:0] regCol0_9;
reg   [7:0] regCol0_10;
reg   [7:0] regCol0_11;
reg   [7:0] regCol0_12;
reg   [7:0] regCol0_13;
reg   [7:0] regCol0_14;
reg   [7:0] regCol0_15;
wire   [7:0] select_ln189_7_fu_1495_p3;
reg   [7:0] ap_phi_mux_storemerge77_phi_fu_345_p4;
wire   [0:0] init_read_read_fu_328_p2;
wire   [7:0] select_ln87_fu_389_p3;
wire   [7:0] select_ln87_1_fu_417_p3;
wire   [7:0] select_ln98_fu_445_p3;
wire   [7:0] select_ln98_1_fu_473_p3;
wire   [7:0] select_ln98_2_fu_501_p3;
wire   [7:0] select_ln98_3_fu_529_p3;
wire   [7:0] select_ln109_fu_557_p3;
wire   [7:0] select_ln109_1_fu_585_p3;
wire   [7:0] select_ln109_2_fu_613_p3;
wire   [7:0] select_ln109_3_fu_641_p3;
wire   [7:0] select_ln109_4_fu_669_p3;
wire   [7:0] select_ln109_5_fu_697_p3;
wire   [7:0] select_ln109_6_fu_725_p3;
wire   [7:0] select_ln109_7_fu_753_p3;
wire   [7:0] select_ln131_fu_911_p3;
wire   [7:0] select_ln138_fu_939_p3;
wire   [7:0] select_ln145_fu_967_p3;
wire   [7:0] select_ln157_fu_1103_p3;
wire   [7:0] select_ln167_fu_1131_p3;
wire   [7:0] select_ln167_1_fu_1159_p3;
wire   [7:0] select_ln178_fu_1187_p3;
wire   [7:0] select_ln178_1_fu_1215_p3;
wire   [7:0] select_ln178_2_fu_1243_p3;
wire   [7:0] select_ln178_3_fu_1271_p3;
wire   [7:0] select_ln189_fu_1299_p3;
wire   [7:0] select_ln189_1_fu_1327_p3;
wire   [7:0] select_ln189_2_fu_1355_p3;
wire   [7:0] select_ln189_3_fu_1383_p3;
wire   [7:0] select_ln189_4_fu_1411_p3;
wire   [7:0] select_ln189_5_fu_1439_p3;
wire   [7:0] select_ln189_6_fu_1467_p3;
wire   [7:0] select_ln213_fu_1966_p3;
wire   [7:0] select_ln220_fu_1986_p3;
wire   [7:0] select_ln227_fu_2006_p3;
wire   [7:0] select_ln77_fu_366_p3;
wire   [0:0] icmp_ln77_fu_360_p2;
wire   [0:0] icmp_ln87_fu_383_p2;
wire   [0:0] icmp_ln87_1_fu_411_p2;
wire   [0:0] icmp_ln98_fu_439_p2;
wire   [0:0] icmp_ln98_1_fu_467_p2;
wire   [0:0] icmp_ln98_2_fu_495_p2;
wire   [0:0] icmp_ln98_3_fu_523_p2;
wire   [0:0] icmp_ln109_fu_551_p2;
wire   [0:0] icmp_ln109_1_fu_579_p2;
wire   [0:0] icmp_ln109_2_fu_607_p2;
wire   [0:0] icmp_ln109_3_fu_635_p2;
wire   [0:0] icmp_ln109_4_fu_663_p2;
wire   [0:0] icmp_ln109_5_fu_691_p2;
wire   [0:0] icmp_ln109_6_fu_719_p2;
wire   [0:0] icmp_ln109_7_fu_747_p2;
wire   [0:0] icmp_ln131_fu_905_p2;
wire   [0:0] icmp_ln138_fu_933_p2;
wire   [0:0] icmp_ln145_fu_961_p2;
wire   [0:0] icmp_ln157_fu_1097_p2;
wire   [0:0] icmp_ln167_fu_1125_p2;
wire   [0:0] icmp_ln167_1_fu_1153_p2;
wire   [0:0] icmp_ln178_fu_1181_p2;
wire   [0:0] icmp_ln178_1_fu_1209_p2;
wire   [0:0] icmp_ln178_2_fu_1237_p2;
wire   [0:0] icmp_ln178_3_fu_1265_p2;
wire   [0:0] icmp_ln189_fu_1293_p2;
wire   [0:0] icmp_ln189_1_fu_1321_p2;
wire   [0:0] icmp_ln189_2_fu_1349_p2;
wire   [0:0] icmp_ln189_3_fu_1377_p2;
wire   [0:0] icmp_ln189_4_fu_1405_p2;
wire   [0:0] icmp_ln189_5_fu_1433_p2;
wire   [0:0] icmp_ln189_6_fu_1461_p2;
wire   [0:0] icmp_ln189_7_fu_1489_p2;
wire   [0:0] icmp_ln213_fu_1960_p2;
wire   [0:0] icmp_ln220_fu_1980_p2;
wire   [0:0] icmp_ln227_fu_2000_p2;
reg   [0:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 regRow4_0 = 8'd0;
#0 regRow4_1 = 8'd0;
#0 regRow3_0 = 8'd0;
#0 regRow3_1 = 8'd0;
#0 regRow3_2 = 8'd0;
#0 regRow3_3 = 8'd0;
#0 regRow2_0 = 8'd0;
#0 regRow2_1 = 8'd0;
#0 regRow2_2 = 8'd0;
#0 regRow2_3 = 8'd0;
#0 regRow2_4 = 8'd0;
#0 regRow2_5 = 8'd0;
#0 regRow2_6 = 8'd0;
#0 regRow2_7 = 8'd0;
#0 regRow1_0 = 8'd0;
#0 regRow1_1 = 8'd0;
#0 regRow1_2 = 8'd0;
#0 regRow1_3 = 8'd0;
#0 regRow1_4 = 8'd0;
#0 regRow1_5 = 8'd0;
#0 regRow1_6 = 8'd0;
#0 regRow1_7 = 8'd0;
#0 regRow1_8 = 8'd0;
#0 regRow1_9 = 8'd0;
#0 regRow1_10 = 8'd0;
#0 regRow1_11 = 8'd0;
#0 regRow1_12 = 8'd0;
#0 regRow1_13 = 8'd0;
#0 regRow1_14 = 8'd0;
#0 regRow1_15 = 8'd0;
#0 regRow0_0 = 8'd0;
#0 regRow0_1 = 8'd0;
#0 regRow0_2 = 8'd0;
#0 regRow0_3 = 8'd0;
#0 regRow0_4 = 8'd0;
#0 regRow0_5 = 8'd0;
#0 regRow0_6 = 8'd0;
#0 regRow0_7 = 8'd0;
#0 regRow0_8 = 8'd0;
#0 regRow0_9 = 8'd0;
#0 regRow0_10 = 8'd0;
#0 regRow0_11 = 8'd0;
#0 regRow0_12 = 8'd0;
#0 regRow0_13 = 8'd0;
#0 regRow0_14 = 8'd0;
#0 regRow0_15 = 8'd0;
#0 regRow0_16 = 8'd0;
#0 regRow0_17 = 8'd0;
#0 regRow0_18 = 8'd0;
#0 regCol3_0 = 8'd0;
#0 regCol3_1 = 8'd0;
#0 regCol2_0 = 8'd0;
#0 regCol2_1 = 8'd0;
#0 regCol2_2 = 8'd0;
#0 regCol2_3 = 8'd0;
#0 regCol1_0 = 8'd0;
#0 regCol1_1 = 8'd0;
#0 regCol1_2 = 8'd0;
#0 regCol1_3 = 8'd0;
#0 regCol1_4 = 8'd0;
#0 regCol1_5 = 8'd0;
#0 regCol1_6 = 8'd0;
#0 regCol1_7 = 8'd0;
#0 regCol0_0 = 8'd0;
#0 regCol0_1 = 8'd0;
#0 regCol0_2 = 8'd0;
#0 regCol0_3 = 8'd0;
#0 regCol0_4 = 8'd0;
#0 regCol0_5 = 8'd0;
#0 regCol0_6 = 8'd0;
#0 regCol0_7 = 8'd0;
#0 regCol0_8 = 8'd0;
#0 regCol0_9 = 8'd0;
#0 regCol0_10 = 8'd0;
#0 regCol0_11 = 8'd0;
#0 regCol0_12 = 8'd0;
#0 regCol0_13 = 8'd0;
#0 regCol0_14 = 8'd0;
#0 regCol0_15 = 8'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regCol1_0 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regCol1_0 <= select_ln189_fu_1299_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regCol1_1 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regCol1_1 <= select_ln189_1_fu_1327_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regCol1_2 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regCol1_2 <= select_ln189_2_fu_1355_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regCol1_3 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regCol1_3 <= select_ln189_3_fu_1383_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regCol1_4 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regCol1_4 <= select_ln189_4_fu_1411_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regCol1_5 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regCol1_5 <= select_ln189_5_fu_1439_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regCol1_6 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regCol1_6 <= select_ln189_6_fu_1467_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regCol2_0 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regCol2_0 <= select_ln178_fu_1187_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regCol2_1 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regCol2_1 <= select_ln178_1_fu_1215_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regCol2_2 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regCol2_2 <= select_ln178_2_fu_1243_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regCol2_3 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regCol2_3 <= select_ln178_3_fu_1271_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regCol3_0 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regCol3_0 <= select_ln167_fu_1131_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regCol3_1 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regCol3_1 <= select_ln167_1_fu_1159_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow0_0 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow0_0 <= select_ln157_fu_1103_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow0_1 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow0_1 <= regRow0_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow0_10 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow0_10 <= regRow0_9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow0_11 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow0_11 <= regRow0_10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow0_12 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow0_12 <= regRow0_11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow0_13 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow0_13 <= regRow0_12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow0_14 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow0_14 <= regRow0_13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow0_15 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow0_15 <= regRow0_14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow0_16 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow0_16 <= regRow0_15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow0_17 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow0_17 <= regRow0_16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow0_18 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow0_18 <= regRow0_17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow0_2 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow0_2 <= regRow0_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow0_3 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow0_3 <= regRow0_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow0_4 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow0_4 <= regRow0_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow0_5 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow0_5 <= regRow0_4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow0_6 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow0_6 <= regRow0_5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow0_7 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow0_7 <= regRow0_6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow0_8 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow0_8 <= regRow0_7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow0_9 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow0_9 <= regRow0_8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow1_0 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow1_0 <= regRow0_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow1_1 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow1_1 <= regRow0_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow1_10 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow1_10 <= regRow0_10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow1_11 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow1_11 <= regRow0_11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow1_12 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow1_12 <= regRow0_12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow1_13 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow1_13 <= select_ln131_fu_911_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow1_14 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow1_14 <= select_ln138_fu_939_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow1_15 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow1_15 <= select_ln145_fu_967_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow1_2 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow1_2 <= regRow0_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow1_3 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow1_3 <= regRow0_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow1_4 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow1_4 <= regRow0_4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow1_5 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow1_5 <= regRow0_5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow1_6 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow1_6 <= regRow0_6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow1_7 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow1_7 <= regRow0_7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow1_8 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow1_8 <= regRow0_8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow1_9 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow1_9 <= regRow0_9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow2_0 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow2_0 <= select_ln109_fu_557_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow2_1 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow2_1 <= select_ln109_1_fu_585_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow2_2 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow2_2 <= select_ln109_2_fu_613_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow2_3 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow2_3 <= select_ln109_3_fu_641_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow2_4 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow2_4 <= select_ln109_4_fu_669_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow2_5 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow2_5 <= select_ln109_5_fu_697_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow2_6 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow2_6 <= select_ln109_6_fu_725_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow2_7 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow2_7 <= select_ln109_7_fu_753_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow3_0 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow3_0 <= select_ln98_fu_445_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow3_1 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow3_1 <= select_ln98_1_fu_473_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow3_2 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow3_2 <= select_ln98_2_fu_501_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow3_3 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow3_3 <= select_ln98_3_fu_529_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow4_0 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow4_0 <= select_ln87_fu_389_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            regRow4_1 <= 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            regRow4_1 <= select_ln87_1_fu_417_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        regCol0_0 <= in0;
        regCol0_1 <= in1;
        regCol0_10 <= in10;
        regCol0_11 <= in11;
        regCol0_12 <= in12;
        regCol0_13 <= select_ln213_fu_1966_p3;
        regCol0_14 <= select_ln220_fu_1986_p3;
        regCol0_15 <= select_ln227_fu_2006_p3;
        regCol0_2 <= in2;
        regCol0_3 <= in3;
        regCol0_4 <= in4;
        regCol0_5 <= in5;
        regCol0_6 <= in6;
        regCol0_7 <= in7;
        regCol0_8 <= in8;
        regCol0_9 <= in9;
        regCol1_7 <= ap_phi_mux_storemerge77_phi_fu_345_p4;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            ap_phi_mux_storemerge77_phi_fu_345_p4 = 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            ap_phi_mux_storemerge77_phi_fu_345_p4 = select_ln189_7_fu_1495_p3;
        end else begin
            ap_phi_mux_storemerge77_phi_fu_345_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_storemerge77_phi_fu_345_p4 = 'bx;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((init_read_read_fu_328_p2 == 1'd1)) begin
            out_r = 8'd255;
        end else if ((init_read_read_fu_328_p2 == 1'd0)) begin
            out_r = select_ln77_fu_366_p3;
        end else begin
            out_r = 'bx;
        end
    end else begin
        out_r = 'bx;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (init_read_read_fu_328_p2 == 1'd1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (init_read_read_fu_328_p2 == 1'd0)))) begin
        out_r_ap_vld = 1'b1;
    end else begin
        out_r_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign icmp_ln109_1_fu_579_p2 = ((regRow1_2 < regRow1_3) ? 1'b1 : 1'b0);

assign icmp_ln109_2_fu_607_p2 = ((regRow1_4 < regRow1_5) ? 1'b1 : 1'b0);

assign icmp_ln109_3_fu_635_p2 = ((regRow1_6 < regRow1_7) ? 1'b1 : 1'b0);

assign icmp_ln109_4_fu_663_p2 = ((regRow1_8 < regRow1_9) ? 1'b1 : 1'b0);

assign icmp_ln109_5_fu_691_p2 = ((regRow1_10 < regRow1_11) ? 1'b1 : 1'b0);

assign icmp_ln109_6_fu_719_p2 = ((regRow1_12 < regRow1_13) ? 1'b1 : 1'b0);

assign icmp_ln109_7_fu_747_p2 = ((regRow1_14 < regRow1_15) ? 1'b1 : 1'b0);

assign icmp_ln109_fu_551_p2 = ((regRow1_0 < regRow1_1) ? 1'b1 : 1'b0);

assign icmp_ln131_fu_905_p2 = ((regRow0_13 < regRow0_14) ? 1'b1 : 1'b0);

assign icmp_ln138_fu_933_p2 = ((regRow0_15 < regRow0_16) ? 1'b1 : 1'b0);

assign icmp_ln145_fu_961_p2 = ((regRow0_17 < regRow0_18) ? 1'b1 : 1'b0);

assign icmp_ln157_fu_1097_p2 = ((regCol3_0 < regCol3_1) ? 1'b1 : 1'b0);

assign icmp_ln167_1_fu_1153_p2 = ((regCol2_2 < regCol2_3) ? 1'b1 : 1'b0);

assign icmp_ln167_fu_1125_p2 = ((regCol2_0 < regCol2_1) ? 1'b1 : 1'b0);

assign icmp_ln178_1_fu_1209_p2 = ((regCol1_2 < regCol1_3) ? 1'b1 : 1'b0);

assign icmp_ln178_2_fu_1237_p2 = ((regCol1_4 < regCol1_5) ? 1'b1 : 1'b0);

assign icmp_ln178_3_fu_1265_p2 = ((regCol1_6 < regCol1_7) ? 1'b1 : 1'b0);

assign icmp_ln178_fu_1181_p2 = ((regCol1_0 < regCol1_1) ? 1'b1 : 1'b0);

assign icmp_ln189_1_fu_1321_p2 = ((regCol0_2 < regCol0_3) ? 1'b1 : 1'b0);

assign icmp_ln189_2_fu_1349_p2 = ((regCol0_4 < regCol0_5) ? 1'b1 : 1'b0);

assign icmp_ln189_3_fu_1377_p2 = ((regCol0_6 < regCol0_7) ? 1'b1 : 1'b0);

assign icmp_ln189_4_fu_1405_p2 = ((regCol0_8 < regCol0_9) ? 1'b1 : 1'b0);

assign icmp_ln189_5_fu_1433_p2 = ((regCol0_10 < regCol0_11) ? 1'b1 : 1'b0);

assign icmp_ln189_6_fu_1461_p2 = ((regCol0_12 < regCol0_13) ? 1'b1 : 1'b0);

assign icmp_ln189_7_fu_1489_p2 = ((regCol0_14 < regCol0_15) ? 1'b1 : 1'b0);

assign icmp_ln189_fu_1293_p2 = ((regCol0_0 < regCol0_1) ? 1'b1 : 1'b0);

assign icmp_ln213_fu_1960_p2 = ((in13 < in14) ? 1'b1 : 1'b0);

assign icmp_ln220_fu_1980_p2 = ((in15 < in16) ? 1'b1 : 1'b0);

assign icmp_ln227_fu_2000_p2 = ((in17 < in18) ? 1'b1 : 1'b0);

assign icmp_ln77_fu_360_p2 = ((regRow4_0 < regRow4_1) ? 1'b1 : 1'b0);

assign icmp_ln87_1_fu_411_p2 = ((regRow3_2 < regRow3_3) ? 1'b1 : 1'b0);

assign icmp_ln87_fu_383_p2 = ((regRow3_0 < regRow3_1) ? 1'b1 : 1'b0);

assign icmp_ln98_1_fu_467_p2 = ((regRow2_2 < regRow2_3) ? 1'b1 : 1'b0);

assign icmp_ln98_2_fu_495_p2 = ((regRow2_4 < regRow2_5) ? 1'b1 : 1'b0);

assign icmp_ln98_3_fu_523_p2 = ((regRow2_6 < regRow2_7) ? 1'b1 : 1'b0);

assign icmp_ln98_fu_439_p2 = ((regRow2_0 < regRow2_1) ? 1'b1 : 1'b0);

assign init_read_read_fu_328_p2 = init;

assign select_ln109_1_fu_585_p3 = ((icmp_ln109_1_fu_579_p2[0:0] === 1'b1) ? regRow1_2 : regRow1_3);

assign select_ln109_2_fu_613_p3 = ((icmp_ln109_2_fu_607_p2[0:0] === 1'b1) ? regRow1_4 : regRow1_5);

assign select_ln109_3_fu_641_p3 = ((icmp_ln109_3_fu_635_p2[0:0] === 1'b1) ? regRow1_6 : regRow1_7);

assign select_ln109_4_fu_669_p3 = ((icmp_ln109_4_fu_663_p2[0:0] === 1'b1) ? regRow1_8 : regRow1_9);

assign select_ln109_5_fu_697_p3 = ((icmp_ln109_5_fu_691_p2[0:0] === 1'b1) ? regRow1_10 : regRow1_11);

assign select_ln109_6_fu_725_p3 = ((icmp_ln109_6_fu_719_p2[0:0] === 1'b1) ? regRow1_12 : regRow1_13);

assign select_ln109_7_fu_753_p3 = ((icmp_ln109_7_fu_747_p2[0:0] === 1'b1) ? regRow1_14 : regRow1_15);

assign select_ln109_fu_557_p3 = ((icmp_ln109_fu_551_p2[0:0] === 1'b1) ? regRow1_0 : regRow1_1);

assign select_ln131_fu_911_p3 = ((icmp_ln131_fu_905_p2[0:0] === 1'b1) ? regRow0_13 : regRow0_14);

assign select_ln138_fu_939_p3 = ((icmp_ln138_fu_933_p2[0:0] === 1'b1) ? regRow0_15 : regRow0_16);

assign select_ln145_fu_967_p3 = ((icmp_ln145_fu_961_p2[0:0] === 1'b1) ? regRow0_17 : regRow0_18);

assign select_ln157_fu_1103_p3 = ((icmp_ln157_fu_1097_p2[0:0] === 1'b1) ? regCol3_0 : regCol3_1);

assign select_ln167_1_fu_1159_p3 = ((icmp_ln167_1_fu_1153_p2[0:0] === 1'b1) ? regCol2_2 : regCol2_3);

assign select_ln167_fu_1131_p3 = ((icmp_ln167_fu_1125_p2[0:0] === 1'b1) ? regCol2_0 : regCol2_1);

assign select_ln178_1_fu_1215_p3 = ((icmp_ln178_1_fu_1209_p2[0:0] === 1'b1) ? regCol1_2 : regCol1_3);

assign select_ln178_2_fu_1243_p3 = ((icmp_ln178_2_fu_1237_p2[0:0] === 1'b1) ? regCol1_4 : regCol1_5);

assign select_ln178_3_fu_1271_p3 = ((icmp_ln178_3_fu_1265_p2[0:0] === 1'b1) ? regCol1_6 : regCol1_7);

assign select_ln178_fu_1187_p3 = ((icmp_ln178_fu_1181_p2[0:0] === 1'b1) ? regCol1_0 : regCol1_1);

assign select_ln189_1_fu_1327_p3 = ((icmp_ln189_1_fu_1321_p2[0:0] === 1'b1) ? regCol0_2 : regCol0_3);

assign select_ln189_2_fu_1355_p3 = ((icmp_ln189_2_fu_1349_p2[0:0] === 1'b1) ? regCol0_4 : regCol0_5);

assign select_ln189_3_fu_1383_p3 = ((icmp_ln189_3_fu_1377_p2[0:0] === 1'b1) ? regCol0_6 : regCol0_7);

assign select_ln189_4_fu_1411_p3 = ((icmp_ln189_4_fu_1405_p2[0:0] === 1'b1) ? regCol0_8 : regCol0_9);

assign select_ln189_5_fu_1439_p3 = ((icmp_ln189_5_fu_1433_p2[0:0] === 1'b1) ? regCol0_10 : regCol0_11);

assign select_ln189_6_fu_1467_p3 = ((icmp_ln189_6_fu_1461_p2[0:0] === 1'b1) ? regCol0_12 : regCol0_13);

assign select_ln189_7_fu_1495_p3 = ((icmp_ln189_7_fu_1489_p2[0:0] === 1'b1) ? regCol0_14 : regCol0_15);

assign select_ln189_fu_1299_p3 = ((icmp_ln189_fu_1293_p2[0:0] === 1'b1) ? regCol0_0 : regCol0_1);

assign select_ln213_fu_1966_p3 = ((icmp_ln213_fu_1960_p2[0:0] === 1'b1) ? in13 : in14);

assign select_ln220_fu_1986_p3 = ((icmp_ln220_fu_1980_p2[0:0] === 1'b1) ? in15 : in16);

assign select_ln227_fu_2006_p3 = ((icmp_ln227_fu_2000_p2[0:0] === 1'b1) ? in17 : in18);

assign select_ln77_fu_366_p3 = ((icmp_ln77_fu_360_p2[0:0] === 1'b1) ? regRow4_0 : regRow4_1);

assign select_ln87_1_fu_417_p3 = ((icmp_ln87_1_fu_411_p2[0:0] === 1'b1) ? regRow3_2 : regRow3_3);

assign select_ln87_fu_389_p3 = ((icmp_ln87_fu_383_p2[0:0] === 1'b1) ? regRow3_0 : regRow3_1);

assign select_ln98_1_fu_473_p3 = ((icmp_ln98_1_fu_467_p2[0:0] === 1'b1) ? regRow2_2 : regRow2_3);

assign select_ln98_2_fu_501_p3 = ((icmp_ln98_2_fu_495_p2[0:0] === 1'b1) ? regRow2_4 : regRow2_5);

assign select_ln98_3_fu_529_p3 = ((icmp_ln98_3_fu_523_p2[0:0] === 1'b1) ? regRow2_6 : regRow2_7);

assign select_ln98_fu_445_p3 = ((icmp_ln98_fu_439_p2[0:0] === 1'b1) ? regRow2_0 : regRow2_1);

endmodule //erosion_accel
